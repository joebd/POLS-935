knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
file1 <- read_html("https://dumps.wikimedia.org/other/pagecounts-raw/2012/2012-01/") %>%
html_nodes("li") %>%
html_node("a") %>%
html_attr("href") %>%
str_subset("pagecounts")
temp1 <- tempfile()
download.file(paste0("https://dumps.wikimedia.org/other/pagecounts-raw/2012/2012-01/", file1[1]), temp1)
gzfile(temp, 'rt')
gzfile(temp1, 'rt')
mydata1 <- read.table(temp1, sep = " ") %>%
as_tibble() %>%
filter(V1 == "en",
V2 == "Al-Qaeda")
unlink(temp1)
mydata1
unlink(temp1)
temp1
length(file1)
file1 <- read_html("https://dumps.wikimedia.org/other/pagecounts-raw/2012/2012-01/") %>%
html_nodes("li") %>%
html_node("a") %>%
html_attr("href") %>%
str_subset("pagecounts")
file1
chr(file1)
str(file1)
file1 <- read_html("https://dumps.wikimedia.org/other/pagecounts-raw/2012/2012-01/") %>%
html_nodes("li") %>%
html_node("a") %>%
html_attr("href") %>%
str_subset("pagecounts")
knitr::opts_chunk$set(echo = TRUE)
# Load the necessary packages.
library(tidyverse)
mydata1 <- read_table("~/Desktop/UWM/Fall 2022/POL SCI 935/Assignment 2/totalcounts.txt",
col_names = FALSE,
col_types = paste0(rep("c", 426),
collapse = "")) %>%
pivot_longer(., cols = everything()) %>%
separate(., value, c("year", "match_total", "page_total", "volume_total")) %>%
select(., -name) %>%
mutate_if(., is.character, as.numeric) %>% # "mutate_if" is superseded, but it works for now.
na.omit(.) %>% # There is a final row in the dataset that is all NA values. Best to remove it.
filter(., year >= 1800 & year <= 2000) # We don't use the other years, so we can prune the data.
mydata2 <- read_table("/Users/kaanaksoy/Desktop/UWM/Fall 2022/POL SCI 935/Assignment 2/all1gram",
col_names = c("ngram", "year", "total", "volume")) %>%
filter(., year >= 1800 & year <= 2000) # Again, we can prune the years as before.
# Creating the necessary variables to replicate the figure.
df1 <- mydata2 %>%
filter(., ngram == c("1883", "1910", "1950")) %>%
left_join(., mydata1, by = "year") %>%
# This is in order to ensure that the total counts of all ngrams for all years are in the same tibble.
#Otherwise, calculating frequency (done in the next command) becomes unnecessarily complicated.
mutate(., freq = (total/match_total)*100)
# Replicating the figure (Fig. 3a).
library(RColorBrewer)
ggplot(df1, aes(x = year, y = freq, colour = ngram)) + # Colour needs to be provided at this stage.
geom_line(size = 0.75) + # Aesthetic preference, making lines a little thicker.
scale_x_continuous(breaks = seq(from = 1875, to = 2000, by = 25),
limits = c(1860, 2000)) +
scale_colour_brewer(palette = "Dark2") + # Adding a better colour scheme with "RColorBrewer" package.
labs(x = "Year", y = "Frequency", colour = "") + # Setting axis titles and removing legend title.
theme_minimal() # Aesthetic preference, not necessary.
## Alternative method with ggplot2.
ggplot(df1, aes(x = year, y = total, colour = ngram)) + # Colour needs to be provided at this stage.
geom_line(size = 0.75) + # Aesthetic preference, making lines a little thicker.
scale_y_continuous(labels = scales::comma, # Removing scientific notation.
limits = c(0, 300000)) + # Increasing upper limit for interpretability.
scale_x_continuous(breaks = seq(from = 1875, to = 2000, by = 25),
limits = c(1860, 2000)) +
scale_colour_brewer(palette = "Dark2") + # Adding a better colour scheme with "RColorBrewer" package.
labs(x = "Year", y = "Frequency", colour = "") + # Setting axis titles and removing legend title.
theme_minimal() # Aesthetic preference, not necessary.
# This is what I have -- it's not right but it got me somewhere
half_life <- gram1 %>%
select(year,ngram,match_count) %>%
filter(ngram %in% 1875:1975, year >= 1850) %>%
filter(year >= ngram) %>%
merge(., total_count, by = "year", suffix = c("","_total")) %>%
mutate(., frequency = match_count/match_count_total) %>%
group_by(ngram) %>%
mutate(max_freq = max(frequency)) %>%
ungroup()
half_life <- mydata2 %>%
select(., year, ngram, match_count)
mydata2
